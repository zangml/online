<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koala.learn.dao.APIMapper">
  <resultMap id="BaseResultMap" type="com.koala.learn.entity.API">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="api_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="request_method" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="creat_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="api_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="upload_algo_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pub" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, api_desc , url, request_method, content_type,status,creat_time,update_time,api_type,
    upload_algo_id,user_id,pub
  </sql>

  <insert id="insert" parameterType="com.koala.learn.entity.API" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into API ( name, api_desc , url, request_method, content_type,status,creat_time,update_time,api_type,
    upload_algo_id,user_id,pub)
    values ( #{name}, #{APIdesc},
      #{url}, #{requestMethod}, #{contentType},
      #{status}, #{creatTime}, #{updateTime}, #{apiType}, #{uploadAlgoId}, #{userId},#{pub})
  </insert>

  <select id="selectById" resultType="com.koala.learn.entity.API">
    select
    <include refid="Base_Column_List"/>
    from API
    where id=#{id}
  </select>
  <select id="getById" resultType="com.koala.learn.entity.API">
    select
    <include refid="Base_Column_List"/>
    from API
    where id=#{id}
  </select>
  <select id="getByUserId" resultType="com.koala.learn.entity.API">
    select
    <include refid="Base_Column_List"/>
    from API
    where user_id=#{userId}
  </select>

  <select id="selectByUploadAlgoId" resultType="com.koala.learn.entity.API">
    select
    <include refid="Base_Column_List"/>
    from API
    where upload_algo_id=#{uploadAlgoId}
  </select>

  <update id="update" parameterType="com.koala.learn.entity.API">
    update API
    set name=#{name}, api_desc=#{APIdesc} , url=#{url}, request_method=#{requestMethod},
     content_type=#{contentType},status=#{status},
    creat_time=#{creatTime},update_time=#{updateTime},api_type=#{apiType},
    upload_algo_id=#{uploadAlgoId},user_id=#{userId},pub=#{pub}
    where id = #{id}
  </update>

  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from API
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <select id="selectAllApis" resultType="com.koala.learn.entity.API">
    select
    <include refid="Base_Column_List"/>
    from API
    order by
    creat_time desc
  </select>
</mapper>