<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koala.learn.dao.DatasetMapper" >
    <resultMap id="BaseResultMap" type="com.koala.learn.entity.Dataset" >
        <constructor >
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="problem" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
            <arg column="data_desc" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
            <arg column="download_url" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="type" jdbcType="TINYINT" javaType="java.lang.Integer" />
            <arg column="local_url" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List" >
    id, name, problem,data_desc,download_url,type,local_url,user_id
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.koala.learn.entity.Dataset" >
    insert into dataset(id,name,problem,data_desc,download_url,type,local_url,user_id)
    values (#{id}, #{name},#{problem},#{dataDesc},#{downloadUrl},#{type},#{localUrl},#{userId})
    </insert>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
        <include refid="Base_Column_List" />
    from dataset
    where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByLocalUrl" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from dataset
        where local_url = #{localUrl}
    </select>

    <select id="getAPIByDataId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from dataset
        where api_type = 5
        and upload_algo_id = #{dataId}
    </select>

</mapper>
