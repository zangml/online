<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koala.learn.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.koala.learn.entity.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="school" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="class_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="student_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="head_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="grade" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="relname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, salt, school, class_id, sex, student_id, email, state, head_url,
    grade, relname,avatar,role
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.koala.learn.entity.User" useGeneratedKeys="true" keyProperty="id" >
    insert into user (id, username, password,
      salt, school, class_id, 
      sex, student_id, email, 
      state, head_url, grade, 
      relname,avatar,role)
    values (#{id}, #{username}, #{password},
      #{salt}, #{school}, #{classId},
      #{sex}, #{studentId}, #{email},
      #{state}, #{headUrl}, #{grade},
      #{relname},#{avatar},#{role})
  </insert>
  <insert id="insertSelective" parameterType="com.koala.learn.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="headUrl != null" >
        head_url,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="relname != null" >
        relname,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="headUrl != null" >
        #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="relname != null" >
        #{relname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.koala.learn.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="headUrl != null" >
        head_url = #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="relname != null" >
        relname = #{relname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.koala.learn.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      head_url = #{headUrl,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      relname = #{relname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="String">
    SELECT
    <include refid="Base_Column_List" />
    FROM user
    WHERE username = #{username}
  </select>

  <select id="selectAllUsers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    order by id desc
  </select>
</mapper>