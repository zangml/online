<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koala.learn.dao.AuthTokenMapper" >
  <resultMap id="BaseResultMap" type="com.koala.learn.entity.AuthToken" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="api_key" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="access_token" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="expired" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, api_key, access_token, expired,status,salt
  </sql>

  <insert id="insert" parameterType="com.koala.learn.entity.AuthToken" useGeneratedKeys="true" keyProperty="id">
    insert into auth_token(id, api_key, access_token, expired,status,salt)
    values (#{id},#{apiKey},#{accessToken},#{expired},#{status},#{salt})
  </insert>

  <select id="selectByApiKey" resultType="com.koala.learn.entity.AuthToken">
    select
    <include refid="Base_Column_List"/>
    from auth_token
    where
    api_key = #{apiKey}
    and
    status = 0
  </select>


  <update id="updateSelective" parameterType="com.koala.learn.entity.AuthToken" >
    update auth_token
    <set >
      <if test="apiKey != null" >
        api_key = #{apiKey},
      </if>
      <if test="accessToken != null" >
        access_token = #{accessToken},
      </if>
      <if test="expired != null" >
        expired = #{expired},
      </if>
      <if test="status != null" >
        status = #{status}
      </if>
      <if test="salt != null" >
        salt = #{salt}
      </if>
    </set>
    where id = #{id}
  </update>

</mapper>