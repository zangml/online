<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koala.learn.dao.AlgorithmMapper">
  <resultMap id="BaseResultMap" type="com.koala.learn.entity.Algorithm">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="algo_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="use_for" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="data_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="blog_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="cata_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, algo_desc , use_for, data_desc, type,type_id,blog_id,cata_desc
  </sql>
  <select id="selectAllAlgorithm" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from algorithm
  </select>

  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from algorithm
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getAlgosByTypeId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from algorithm
    where type = #{typeId}
  </select>
</mapper>