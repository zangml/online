<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:datasource.properties" />
    <import resource="rabbitmq.xml" />
    <context:component-scan base-package="com.koala.learn" />
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}" />
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="${db.initialSize}"/>
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="${db.maxActive}"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="${db.maxIdle}"/>
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="${db.minIdle}"/>
        <!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制 -->
        <property name="maxWait" value="${db.maxWait}"/>
        <!--#给出一条简单的sql语句进行验证 -->
        <!--<property name="validationQuery" value="select getdate()" />-->
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        <!-- 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 -->
        <!--<property name="removeAbandoned" value="true" />-->
        <!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
        <!--<property name="removeAbandonedTimeout" value="120" />-->
        <!-- #连接的超时时间，默认为半小时。 -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>

        <!--# 失效检查线程运行时间间隔，要小于MySQL默认-->
        <property name="timeBetweenEvictionRunsMillis" value="40000"/>
        <!--# 检查连接是否有效-->
        <property name="testWhileIdle" value="true"/>
        <!--# 检查连接有效性的SQL语句-->
        <property name="validationQuery" value="SELECT 1 FROM dual"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="typeAliasesPackage" value="com.koala.learn.entity" />
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <property name="plugins">
             <array>
                  <bean class="com.github.pagehelper.PageInterceptor">
                        <property name="properties">
                              <value>
                                   helperDialect=mysql
                              </value>
                        </property>
                  </bean>
             </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.koala.learn.dao" />
    </bean>
    <!-- 使用@Transactional进行声明式事务管理需要声明下面这行 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>


    <bean id="gbdt" class="weka.classifiers.meta.AdditiveRegression" />
    <bean id="j48" class="weka.classifiers.trees.J48"></bean>
    <bean id="knn" class="weka.classifiers.lazy.IBk" />
    <bean id="adaboost" class="weka.classifiers.meta.AdaBoostM1" />
    <bean id="bagging" class="weka.classifiers.meta.Bagging" />
    <bean id="stacking" class="weka.classifiers.meta.Stacking" />

    <bean id="random" class="com.koala.learn.utils.divider.RandomDivider" />
    <bean id="average" class="com.koala.learn.utils.divider.AverageDivider" />
    <bean id="range" class="com.koala.learn.utils.divider.RangeDivider" />

    <bean id="smote" class="com.koala.learn.utils.feature.SMOTEFeature" />
    <bean id="pca" class="com.koala.learn.utils.feature.CPAFeature"></bean>
    <bean id="window" class="com.koala.learn.utils.feature.WindowFeature" />
    <bean id="fft" class="com.koala.learn.utils.feature.DFTFeature" />
    <bean id="wav" class="com.koala.learn.utils.feature.WavedecFeature" />
    <bean id="ocsvm" class="com.koala.learn.utils.feature.OneClassSVMFeature" />
    <bean id="isolation" class="com.koala.learn.utils.feature.IsolationForestFeature" />
    <bean id="lof" class="com.koala.learn.utils.feature.LocalOutlierFactorFeature" />
    <bean id="normal" class="com.koala.learn.utils.feature.NormalizationFeature" />
    <bean id="time" class="com.koala.learn.utils.feature.TimeFeature" />
    <bean id="fea_all" class="com.koala.learn.utils.feature.AllFeature" />


    <bean class="com.google.gson.Gson" />


    <!-- spring thread pool executor -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5" />
        <!-- 允许的空闲时间 -->
        <property name="keepAliveSeconds" value="200" />
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10" />
        <!-- 缓存队列 -->
        <property name="queueCapacity" value="20" />
        <!-- 对拒绝task的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>



</beans>